version: '3.8'

services:
  db:
    image: postgres:15
    container_name: document_management_db_prod
    environment:
      POSTGRES_DB: document_management
      POSTGRES_USER: ${DB_USER:-prod_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: document_management_backend_prod
    environment:
      DATABASE_URL: postgresql://${DB_USER:-prod_user}:${DB_PASSWORD:-secure_password}@db:5432/document_management
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 60
      DEBUG: "False"
    volumes:
      - backend_uploads_prod:/app/uploads
      - backend_logs_prod:/app/logs
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: document_management_frontend_prod
    environment:
      REACT_APP_API_URL: ${API_URL:-https://api.yourdomain.com}
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: document_management_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data_prod:
  backend_uploads_prod:
  backend_logs_prod:

networks:
  app-network:
    driver: bridge